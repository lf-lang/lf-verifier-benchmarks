target C {
    no-compile: true
};

reactor A {
    output out:int;
    reaction(startup) -> out {=
        lf_set(out, 2);
    =}
}

reactor B {
    input in:int;
    state s:int(0);
    reaction(in) {=
        if (in->value <= 1) {
            self->s = in->value;
        } 
        else {
            self->s = 2 * in->value;
        }
    =}
}

//@property(name="test", tactic="bmc", spec="!(X[0](Simple_a_reaction_0))")
@property(name="signal_received_within_5_nsec", tactic="bmc", spec="(X[0](Simple_a_reaction_0) ==> F[0, 5 nsec](Simple_b_in_is_present && Simple_b_in == 2 ))") // valid
// @property(name="state_var_le_3", tactic="bmc", spec="G[0, 1 sec](Simple_b_s < 3)") // sat
main reactor {
    a = new A();
    b = new B();
    a.out -> b.in after 1 nsec;
}

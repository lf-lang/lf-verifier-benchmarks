target C {
    no-compile: true
};

reactor A {
    output out:int;
    reaction(startup) -> out {=
        lf_set(out, 1);
    =}
}

reactor B {
    input in:int;
    reaction(in) {=
        if (in->value != 1) {
            panic();
        }
    =}
}

// The use of @property attribute activates verification.
// An analyzability validator will determine whether the code block
// can be analyzed or not. If not, the verifier interprets the block
// as a nondeterministic operation.
@property(name="signal_sent", tactic="induction", spec="Simple_a_reaction_0 ==> F[< 5 nsec]( Simple_b_in_is_present && Simple_b_in == 1 )")
main reactor {
    a = new A();
    b = new B();
    a.out -> b.in after 1 nsec;
}

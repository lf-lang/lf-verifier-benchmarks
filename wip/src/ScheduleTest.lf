target C {
    fast: true,
    // tracing: true,
    scheduler: NP,
    workers: 2
}

reactor Source {
    output out:int
    timer t(0, 10 msec)
    state s:int(0)
    @wcet(100000)
    reaction(t) -> out {=
        lf_set(out, self->s++);
        lf_print("Inside source reaction_0");
    =}
}

reactor Sink {
    input in:int
    input in2:int
    timer t(0, 5 msec)
    state sum:int(0)
    @wcet(100000)
    reaction(t) {=
        self->sum++;
        lf_print("Sum: %d", self->sum);
    =}
    @wcet(100000)
    reaction(in) {=
        self->sum += in->value;
        lf_print("Sum: %d", self->sum);
    =}
    @wcet(100000)
    reaction(in2) {=
        self->sum += in2->value;
        lf_print("Sum: %d", self->sum);
    =}
}

//@property(name="test", tactic="bmc", spec="G[0, 10 sec](false)")
main reactor {
    source = new Source()
    source2 = new Source()
    sink = new Sink()
    source.out -> sink.in
    source2.out -> sink.in2
}

target C;

@lang("c")
reactor Controller {
    output out:int
    reaction(startup) -> out {=        
        lf_set(out, 1);
    =}
}

@lang("c")
reactor Vision {
    
    input inp:int
    output out:int
    state ramp:int = 0
    
    reaction(inp) -> out {=
        if (self->ramp == 1) {
            lf_set(out, 0); // 0 = Do not open.
        } else {
            lf_set(out, 1); // 1 = Open.
        }
    =}
}

@lang("c")
reactor Door {
    input inp:int
    state doorOpen:int
    reaction(inp) {=
        if (inp->value == 1)
            self->doorOpen = 1; // Open
        else if (inp->value == 0)
            self->doorOpen = 0; // Closed
    =}
}

@property(name="vision_works", tactic="bmc", spec="((AircraftDoor.vision.ramp == 0) ==> (G[0 sec](AircraftDoor.door.reaction_1 ==> (AircraftDoor.door.doorOpen == 1))))", expect=true)
@lang("c")
main reactor AircraftDoor {
    controller	= new Controller();
    vision		= new Vision();
    door		= new Door();
    controller.out -> vision.inp;
    vision.out -> door.inp;
}

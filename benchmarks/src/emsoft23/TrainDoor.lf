target C;

@lang("c")
reactor Controller {
    output out1:int
    output out2:int
    reaction(startup) -> out1, out2 {=
        lf_set(out1, 1);
        lf_set(out2, 2);
    =}
}

@lang("c")
reactor Train {
    input inp:int
    state received:int = 0
    reaction(inp) {=
        self->received = inp->value;
    =}
}

@lang("c")
reactor Door {
    input inp:int
    state received:int = 0
    reaction(inp) {=
        self->received = inp->value;
    =}
}

@property(name="train_does_not_move_until_door_closes", tactic="bmc", spec="(!TrainDoor.t.reaction_1)U[0, 1 sec](TrainDoor.d.reaction_1)", expect=false)
@lang("c")
main reactor {
    c = new Controller();
    t = new Train();
    d = new Door();
    c.out1 -> t.inp after 1 sec;
    c.out2 -> d.inp after 1 sec;
}
